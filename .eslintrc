{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    // Max line length, default value was 100
    "max-len": ["error", 250],
    // Semi colon everwhere
    "babel/semi": "error",

    // No use of default props
    "react/require-default-props": 0,

    // Do not check for defaulProps and propTypes match (we don't use them)
    "react/default-props-match-prop-types": 0,

    "react/jsx-one-expression-per-line": "off",

    "react/sort-comp": [2, {
      "order": [
        "type-annotations",
        "static-methods",
        "lifecycle",
        "everything-else",
        "render"
      ]
    }],

    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // No use of default export
    "import/prefer-default-export": "off",
    // one file can contain multiple exports
    "import/no-cycle": "warn",

    // Not always using label with htmlFor
    "jsx-a11y/label-has-for": "off",

    // Accessibility rules:

    "jsx-a11y/click-events-have-key-events": "off",

    "jsx-a11y/mouse-events-have-key-events": "off",

    "jsx-a11y/no-static-element-interactions": "off",

    "jsx-a11y/anchor-is-valid": "off",

    "react/destructuring-assignment": "off",
    // we do not always have label with htmlFor
    "jsx-a11y/label-has-associated-control": "off",
    // Ref's current field is mutable
    "no-param-reassign": ["error", { "ignorePropertyModificationsFor": ["ref"]}],

    "@typescript-eslint/member-delimiter-style": ["error", {
      "multiline": {
          "delimiter": "comma",
          "requireLast": true
      },
      "singleline": {
          "delimiter": "comma",
          "requireLast": false
      }
    }],

    // note you must disable the base rule as it can report incorrect errors
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error", { "functions":  false }],
    // spread is ok
    "react/jsx-props-no-spreading": "off",

    "react/static-property-placement": "warn",

    "react/state-in-constructor": "warn",

    "react/function-component-definition": ["error", { "namedComponents": "arrow-function" }],

    "no-console": ["error", { "allow": ["warn", "error"] }],

    "@typescript-eslint/ban-ts-comment": ["error", { "ts-expect-error": "allow-with-description" }],

    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "warn",

    "import/no-duplicates": "warn",
    
    "@typescript-eslint/consistent-type-imports": ["error", { "prefer": "type-imports" }],

    "unused-imports/no-unused-imports": "error",

    // react is always in scope now
    "react/react-in-jsx-scope": "off",

    "no-unused-expressions": "off",

    "@typescript-eslint/no-unused-expressions": "error",
    // TODO: remove and fix errors
    "@typescript-eslint/no-empty-function": "warn"
  },

  "plugins": [
    "jest",
    "babel",
    "@typescript-eslint",
    "react-hooks",
    "unused-imports"
  ],

  "extends": [
    "airbnb",
    "airbnb-typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended"
  ],

  "env": {
    "browser": true,
    "jest/globals": true
  },

  "overrides": [
    {
      "files": [
        "demo/**"
      ],
      "rules": {
        "no-console": "off"
      }
    }
  ]
}
