name: Deploy Leda to Main Station
on:
  push:
    branches: ["master"]

jobs:
  # PHASE 1: BUILD THE APPLICATION
  build:
    name: Build Next.js Application
    runs-on: ubuntu-latest # GitHub-hosted Linux VM

    steps:
      # Step: Clone your repo
      - name: Checkout
        uses: actions/checkout@v4

      # Step: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24" # Matches your server
          cache: "npm"

      # Step: Install dependencies
      - name: Install leda dependencies
        run: npm ci

      - name: Build styles
        run: npm run build:css

      - name: Install docs dependencies
        run: npm run ci:docs

      - name: Build
        run: npm run build:docs

      # - name: Lint
      #   run: npm run lint

      # - name: TS
      #   run: npm run tsc

      # Step: Package artifacts for deployment
      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: |
            docs/.next/       # Built Next.js docs
            docs/public/      # Static files for docs
            docs/package.json
            docs/package-lock.json
            dist/styles/      # Built CSS from your components
            package.json      # Main project config
            package-lock.json

  # PHASE 2: DEPLOY TO SERVER
  deploy:
    name: Deploy to Production Server
    needs: build # Waits for build job to complete
    runs-on: ubuntu-latest

    steps:
      # Step 1: Get the build artifacts we saved earlier
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build # Matches the name from upload step

      # Step 2: Deploy to server via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }} # Your server's IP address
          username: deployer # The user we set up on your server
          key: ${{ secrets.SERVER_SSH_KEY }} # Private key for authentication
          script: |
            # Navigate to your project directory
            cd /var/www/leda

            # Remove old build files to prevent conflicts
            rm -rf .next public

            # Transfer new files from GitHub to your server:
            # 1. tar -czf - creates a compressed package of our files
            # 2. Pipes (|) this to SSH which extracts it on your server
            tar -czf - .next/ public/ package.json package-lock.json | \
              ssh deployer@${{ secrets.SERVER_IP }} "cd /var/www/leda && tar -xzf -"

            # Install only production dependencies (no devDependencies)
            # npm ci --production

            # Restart the application using PM2 process manager
            # pm2 restart next-app
